#cloud-config
autoinstall:
  apt:
    disable_components: []
    disable_suites: [security]
    geoip: true
    preserve_sources_list: false
    primary:
      - arches:
          - amd64
          - i386
        uri: http://archive.ubuntu.com/ubuntu
      - arches:
          - default
        uri: http://ports.ubuntu.com/ubuntu-ports
  drivers:
    install: false
  identity:
    hostname: wsa
    password: $6$8uAtTxrhimflt9dY$Oy9I5tgs6iBdGhKVQFMTMoQYPINr5qgwvYlfjCF24eaNqRITSENsvbUA1DhkXWZ4bJNL2iJ/VMKjIiAG.UhWt0
    realname: wsa
    username: wsa
  kernel:
    package: linux-generic
  keyboard:
    layout: us
    toggle: null
    variant: ''
  locale: en_US.UTF-8
  network:
    ethernets:
      # Note: This NIC name ens136 is my custom name, during installation, if you specify the config-network.sh script, it will
      # be automatically changed to the first NIC name of the machine itself
      ens136:
        addresses:
          - 192.168.6.100/24
        gateway4: 192.168.6.1
        nameservers:
          addresses:
            - 114.114.114.114
          search: []
    version: 2
  ssh:
    allow-pw: true
    authorized-keys: []
    install-server: true
  storage:
    config:
      - ptable: gpt
        path: /dev/sda
        wipe: superblock
        preserve: false
        name: ''
        grub_device: false
        type: disk
        id: disk-sda
      - device: disk-sda
        size: 1127219200
        wipe: superblock
        flag: boot
        number: 1
        preserve: false
        grub_device: true
        type: partition
        id: partition-0
      - fstype: fat32
        volume: partition-0
        preserve: false
        type: format
        id: format-0
      - device: disk-sda
        size: 2147483648
        wipe: superblock
        flag: ''
        number: 2
        preserve: false
        grub_device: false
        type: partition
        id: partition-1
      - fstype: ext4
        volume: partition-1
        preserve: false
        type: format
        id: format-1
      - device: disk-sda
        size: 116756840448
        wipe: superblock
        flag: ''
        number: 3
        preserve: false
        grub_device: false
        type: partition
        id: partition-2
      - name: ubuntu-vg
        devices:
          - partition-2
        preserve: false
        type: lvm_volgroup
        id: lvm_volgroup-0
      - name: lv-0
        volgroup: lvm_volgroup-0
        size: 8589934592B
        wipe: superblock
        preserve: false
        type: lvm_partition
        id: lvm_partition-1
      - fstype: swap
        volume: lvm_partition-1
        preserve: false
        type: format
        id: format-3
      - path: ''
        device: format-3
        type: mount
        id: mount-3
      - name: lv-1
        volgroup: lvm_volgroup-0
        size: -1
        wipe: superblock
        preserve: false
        type: lvm_partition
        id: lvm_partition-2
      - fstype: ext4
        volume: lvm_partition-2
        preserve: false
        type: format
        id: format-4
      - path: /
        device: format-4
        type: mount
        id: mount-4
      - path: /boot
        device: format-1
        type: mount
        id: mount-1
      - path: /boot/efi
        device: format-0
        type: mount
        id: mount-0
    swap:
      swap: 0
    grub:
      # This avoids a loop where we autoinstall, reboot to the autoinstaller USB, then autoinstall again and so on.
      reorder_uefi: False
  version: 1
  timezone: Asia/Shanghai
  late-commands:
    - cp -rp /cdrom/mnt /target/
    - chmod +x /target/mnt/script/install-pkgs.sh
    - curtin in-target --target=/target -- /mnt/script/install-pkgs.sh
    - chmod +x /target/mnt/script/config.sh
    - curtin in-target --target=/target -- /mnt/script/config.sh
    - cp /cdrom/rc-local.service /target/lib/systemd/system/rc-local.service
    - curtin in-target --target=/target -- ln -s /lib/systemd/system/rc-local.service /etc/systemd/system/rc-local.service
    - cp -p /cdrom/rc.local /target/etc/rc.local
    - chmod +x /target/etc/rc.local
    - systemctl daemon-reload
    - cp -rp /cdrom/mnt/wsa  /target/opt
    - cp /cdrom/mnt/wsa/wsa.service /target/lib/systemd/system/wsa.service
    - curtin in-target --target=/target -- ln -sn /lib/systemd/system/wsa.service  /etc/systemd/system/multi-user.target.wants/wsa.service