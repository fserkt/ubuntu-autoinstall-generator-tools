#!/usr/bin/env bash

#This script will be executed *after* all the other init scripts.
#You can put your own initialization stuff in here if you don't
#want to do the full Sys V style init stuff.

set -Eeuo pipefail

file="/etc/rc.local"

function cleanup() {
        trap - SIGINT SIGTERM ERR EXIT
        if [  -s ${file} ]; then
                cat /dev/null > ${file}
                log "üöΩ Emptying files $file"
        fi
}

#trap cleanup SIGINT SIGTERM ERR EXIT

# the following functions are used for logging purposes and are not recommended to be modified
# set variable value
DATE=`date "+%Y-%m-%d %H:%M:%S"`
USER=`whoami`
HOST_NAME=`hostname`
LOG_FILE="/var/log/rc-local.log"
#script_dir=$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P)

# Execution successful log printing path
function log_info () {
    echo "${DATE} ${HOST_NAME} ${USER} execute $0 [INFO] $@" >> ${LOG_FILE}
}

# Execution successful ‚ö†Ô∏è warning log print path
function log_warn () {
    echo "${DATE} ${HOST_NAME} ${USER} execute $0 [WARN] $@" >> ${LOG_FILE}
}

# Execution failure log print path
function log_error () {
    echo -e "\033[41;37m ${DATE} ${HOST_NAME} ${USER} execute $0 [ERROR] $@ \033[0m"  >> ${LOG_FILE}
}

function fn_log ()  {
    if [  $? -eq 0  ]
    then
            log_info "üëç $@ sucessed."
            echo -e "\033[32m $@ sucessed. \033[0m"
    else
            log_error "üëø $@ failed."
            echo -e "\033[41;37m $@ failed. \033[0m"
            exit 1
    fi
}

# this is an example of password mysql change
mysql_user="root"
# default password is null
mysql_password=""
new_mysql_password="ubuntu"
while true; do
    processNum=`ps aux | grep mysqld | grep -v grep | wc -l`;
    # change mysql password
    if [ $processNum -ne 0 ]; then
      # select host, user, authentication_string from user where user="root";

      # authentication_string is not empty
      #use mysql;
      #update user set authentication_string='' where user='root';
      #ALTER user 'root'@'localhost' IDENTIFIED BY 'root';

      # authentication_string is empty, noteÔºö only mysql initable do once it
      mysql -e  "ALTER USER 'root'@'localhost' IDENTIFIED BY ${new_mysql_password};" -u${mysql_user} -p${mysql_password}
      fn_log "change mysql password"

      # mysql version is less than 8.0, the execute follow command
      #mysql -e  "grant all privileges on *.* to 'root'@'%' identified by 'lab123' with grant option;" -u${mysql_user} -p${mysql_password}

      # mysql version is greater than 8.0, execute the following commandÔºå noteÔºö only mysql initable do once it
      mysql -e  "create user 'root'@'%' identified by 'ubuntu';" -u${mysql_user} -p${mysql_password}
      fn_log "mysql create remote user access"
      mysql -e  "grant all privileges on *.* to 'root'@'%' with grant option;" -u${mysql_user} -p${mysql_password}
      fn_log "mysql privileges remote user access"

      mysql -e  "flush privileges;" -u${mysql_user} -p${mysql_password}
      mysql -e  "commit;" -u${mysql_user} -p${mysql_password}
      fn_log "update mysql password success"
      break
    else
      sleep 1
    fi
done
log_info "‚úÖ Completed." 0
